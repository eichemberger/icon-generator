import { type NextPage } from "next";
import Head from "next/head";

import { api } from "~/utils/api";
import {Input} from "~/components/Input";
import {FormGroup} from "~/components/FormGroup";
import React, {useState} from "react";
import {Button} from "~/components/Button";
import Image from "next/image";
import {iconOptionsColors, iconShapes, iconStyles} from "~/config/constants";

const GeneratePage: NextPage = () => {

    const [form, setForm] = useState({
        prompt: "",
        color: "",
        shape: "",
        style: "",
        numberOfIcons: "1",
    });

    const [imageUrl, setImageUrl] = useState('');
    const [error, setError] = useState("");

    const generateIcon = api.generate.generateIcon.useMutation({
        onSuccess(data) {
            console.log('success', data);
            if (!data.imageUrl) {
                return;
            }
            setImageUrl(data.imageUrl);
        }
    });

    function updateForm(key:string) {
        return function(e: React.ChangeEvent<HTMLInputElement>) {
            setForm((prev) => ({
                ...prev,
                [key]: e.target.value
            })
        )}
    }

    function handleFormSubmit(e: React.FormEvent) {
        e.preventDefault();
        setError("");
        generateIcon.mutate({
            ...form,
            numberOfIcons: parseInt(form.numberOfIcons),
        });
    }

    return (
        <>
            <Head>
                <title>Generate Icons</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="container mx-auto mt-24 flex min-h-screen flex-col gap-4 px-8">
                <h1 className="text-4xl">Generate your icons</h1>
                <p className="mb-12 text-2xl">Fill out the form to generate your icons</p>
                <form className="flex flex-col gap-4"
                    onSubmit={handleFormSubmit}
                >
                    <h2 className="text-xl">1. Describe what you want your icon to look like</h2>
                    <FormGroup className="mb-12">
                        <label htmlFor="">Prompt</label>
                        <Input value={form.prompt} onChange={updateForm('prompt')} />
                    </FormGroup>

                    <h2 className="text-xl">2. Pick your icon color.</h2>
                    <FormGroup className="mb-12 grid grid-cols-4">
                        {iconOptionsColors.map((color) => (
                            <label key={color} className="flex gap-2 text-2xl">
                                <input
                                    required
                                    type="radio"
                                    name="color"
                                    checked={color === form.color}
                                    onChange={() => setForm((prev) => ({ ...prev, color }))}
                                ></input>
                                {color}
                            </label>
                        ))}
                    </FormGroup>

                    <h2 className="text-xl">3. Pick your icon shape.</h2>
                    <FormGroup className="mb-12 grid grid-cols-4">
                        {iconShapes.map((shape) => (
                            <label key={shape} className="flex gap-2 text-2xl">
                                <input
                                    required
                                    type="radio"
                                    name="shape"
                                    checked={shape === form.shape}
                                    onChange={() => setForm((prev) => ({ ...prev, shape }))}
                                ></input>
                                {shape}
                            </label>
                        ))}
                    </FormGroup>

                    <h2 className="text-xl">4. Pick your icon style.</h2>
                    <FormGroup className="mb-12 grid grid-cols-4">
                        {iconStyles.map((style) => (
                            <label key={style} className="flex gap-2 text-2xl">
                                <input
                                    required
                                    type="radio"
                                    name="style"
                                    checked={style === form.style}
                                    onChange={() => setForm((prev) => ({ ...prev, style }))}
                                ></input>
                                {style}
                            </label>
                        ))}
                    </FormGroup>

                    <h2 className="text-xl">5. How many do you want.</h2>
                    <FormGroup className="mb-12">
                        <label>Number of icons</label>
                        <Input
                            inputMode="numeric"
                            pattern="[1-9]|10"
                            value={form.numberOfIcons}
                            required
                            onChange={updateForm("numberOfIcons")}
                        ></Input>
                    </FormGroup>

                    <Button
                        isLoading={generateIcon.isLoading}
                        disabled={generateIcon.isLoading}
                    >Submit</Button>
                </form>

                {imageUrl &&
                    <>
                        <h2 className="text-xl">Your icons</h2>
                        <section className="mb-12 grid grid-cols-4 gap-4"></section>
                        <Image
                            src={imageUrl}
                            alt="an image of your generated prompt"
                            width="512"
                            height="512"
                            className="w-full"
                        />
                    </>
                }

            </main>
        </>
    );
};

export default GeneratePage;
