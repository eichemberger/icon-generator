import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import Image from "next/image";
import {PrimaryLinkButton} from "~/components/PrimaryLinkButton";

function HeroBanner() {
  return (
      <section className="grid grid-cols-2 gap-12 px-8 mt-24">
          <div className="flex flex-col gap-4">
              <h1 className="text-6xl">Generate icons with the click of a button</h1>
              <p className="text-2xl">Use AI to generate icons on the flight</p>
              <PrimaryLinkButton href="/generate">Generate your Icons</PrimaryLinkButton>
        </div>
        <div>
            <Image
                src="/banner.png"
                alt="An image of a bunch icons"
                width="300"
                height="300"
            />
        </div>
      </section>
  );
}

const HomePage: NextPage = () => {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex flex-col items-center justify-center">
        <HeroBanner />
      </main>
    </>
  );
};

export default HomePage;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
